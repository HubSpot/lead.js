{"body": "<div class=\"section\" id=\"functions\">\n<h1>Functions<a class=\"headerlink\" href=\"#functions\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Functions are used to transform, combine, and perform computations on <a class=\"reference internal\" href=\"../terminology/#term-series\"><em class=\"xref std std-term\">series</em></a> data. Functions are\napplied using the Composer interface or by manipulating the <tt class=\"docutils literal\"><span class=\"pre\">target</span></tt> parameters in the\n<a class=\"reference internal\" href=\"../render_api/\"><em>Render API</em></a>.</p>\n<div class=\"section\" id=\"usage\">\n<h2>Usage<a class=\"headerlink\" href=\"#usage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Most functions are applied to one <a class=\"reference internal\" href=\"../terminology/#term-series-list\"><em class=\"xref std std-term\">series list</em></a>. Functions with the parameter\n<tt class=\"docutils literal\"><span class=\"pre\">*seriesLists</span></tt> can take an arbitrary number of series lists. To pass multiple series lists\nto a function which only takes one, use the <tt class=\"xref py py-func docutils literal\"><span class=\"pre\">group()</span></tt> function.</p>\n</div>\n<div class=\"section\" id=\"module-graphite.render.functions\">\n<span id=\"id1\"></span><span id=\"list-of-functions\"></span><h2>List of functions<a class=\"headerlink\" href=\"#module-graphite.render.functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.absolute\">\n<tt class=\"descname\">absolute</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.absolute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and applies the mathematical abs function to each\ndatapoint transforming it to its absolute value.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=absolute(Server.instance01.threads.busy)\n&amp;target=absolute(Server.instance*.threads.busy)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.alias\">\n<tt class=\"descname\">alias</tt><big>(</big><em>seriesList</em>, <em>newName</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.alias\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and a string in quotes.\nPrints the string instead of the metric name in the legend.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=alias(Sales.widgets.largeBlue,&quot;Large Blue Widgets&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.aliasByMetric\">\n<tt class=\"descname\">aliasByMetric</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.aliasByMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a seriesList and applies an alias derived from the base metric name.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=aliasByMetric(carbon.agents.graphite.creates)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.aliasByNode\">\n<tt class=\"descname\">aliasByNode</tt><big>(</big><em>seriesList</em>, <em>*nodes</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.aliasByNode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a seriesList and applies an alias derived from one or more &#8220;node&#8221;\nportion/s of the target name. Node indices are 0 indexed.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=aliasByNode(ganglia.*.cpu.load5,1)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.aliasSub\">\n<tt class=\"descname\">aliasSub</tt><big>(</big><em>seriesList</em>, <em>search</em>, <em>replace</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.aliasSub\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runs series names through a regex search/replace.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=aliasSub(ip.*TCP*,&quot;^.*TCP(\\d+)&quot;,&quot;\\1&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.alpha\">\n<tt class=\"descname\">alpha</tt><big>(</big><em>seriesList</em>, <em>alpha</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.alpha\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns the given alpha transparency setting to the series. Takes a float value between 0 and 1.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.areaBetween\">\n<tt class=\"descname\">areaBetween</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.areaBetween\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Draws the area in between the two series in seriesList</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.asPercent\">\n<tt class=\"descname\">asPercent</tt><big>(</big><em>seriesList</em>, <em>total=None</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.asPercent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates a percentage of the total of a wildcard series. If <cite>total</cite> is specified,\neach series will be calculated as a percentage of that total. If <cite>total</cite> is not specified,\nthe sum of all points in the wildcard series will be used instead.</p>\n<p>The <cite>total</cite> parameter may be a single series or a numeric value.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=asPercent(Server01.connections.{failed,succeeded}, Server01.connections.attempted)\n&amp;target=asPercent(apache01.threads.busy,1500)\n&amp;target=asPercent(Server01.cpu.*.jiffies)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.averageAbove\">\n<tt class=\"descname\">averageAbove</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.averageAbove\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the metrics with an average value\nabove N for the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=averageAbove(server*.instance*.threads.busy,25)\n</pre></div>\n</div>\n<p>Draws the servers with average values above 25.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.averageBelow\">\n<tt class=\"descname\">averageBelow</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.averageBelow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the metrics with an average value\nbelow N for the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=averageBelow(server*.instance*.threads.busy,25)\n</pre></div>\n</div>\n<p>Draws the servers with average values below 25.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.averageSeries\">\n<tt class=\"descname\">averageSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.averageSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Short Alias: avg()</p>\n<p>Takes one metric or a wildcard seriesList.\nDraws the average value of all metrics passed at each time.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=averageSeries(company.server.*.threads.busy)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.averageSeriesWithWildcards\">\n<tt class=\"descname\">averageSeriesWithWildcards</tt><big>(</big><em>seriesList</em>, <em>*position</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.averageSeriesWithWildcards\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Call averageSeries after inserting wildcards at the given position(s).</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=averageSeriesWithWildcards(host.cpu-[0-7].cpu-{user,system}.value, 1)\n</pre></div>\n</div>\n<p>This would be the equivalent of\n<tt class=\"docutils literal\"><span class=\"pre\">target=averageSeries(host.*.cpu-user.value)&amp;target=averageSeries(host.*.cpu-system.value)</span></tt></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.cactiStyle\">\n<tt class=\"descname\">cactiStyle</tt><big>(</big><em>seriesList</em>, <em>system=None</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.cactiStyle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a series list and modifies the aliases to provide column aligned\noutput with Current, Max, and Min values in the style of cacti. Optonally\ntakes a &#8220;system&#8221; value to apply unit formatting in the same style as the\nY-axis.\nNOTE: column alignment only works with monospace fonts such as terminus.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=cactiStyle(ganglia.*.net.bytes_out,&quot;si&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.color\">\n<tt class=\"descname\">color</tt><big>(</big><em>seriesList</em>, <em>theColor</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.color\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns the given color to the seriesList</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=color(collectd.hostname.cpu.0.user, &#39;green&#39;)\n&amp;target=color(collectd.hostname.cpu.0.system, &#39;ff0000&#39;)\n&amp;target=color(collectd.hostname.cpu.0.idle, &#39;gray&#39;)\n&amp;target=color(collectd.hostname.cpu.0.idle, &#39;6464ffaa&#39;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.consolidateBy\">\n<tt class=\"descname\">consolidateBy</tt><big>(</big><em>seriesList</em>, <em>consolidationFunc</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.consolidateBy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and a consolidation function name.</p>\n<p>Valid function names are &#8216;sum&#8217;, &#8216;average&#8217;, &#8216;min&#8217;, and &#8216;max&#8217;</p>\n<p>When a graph is drawn where width of the graph size in pixels is smaller than\nthe number of datapoints to be graphed, Graphite consolidates the values to\nto prevent line overlap. The consolidateBy() function changes the consolidation\nfunction from the default of &#8216;average&#8217; to one of &#8216;sum&#8217;, &#8216;max&#8217;, or &#8216;min&#8217;. This is\nespecially useful in sales graphs, where fractional values make no sense and a &#8216;sum&#8217;\nof consolidated values is appropriate.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=consolidateBy(Sales.widgets.largeBlue, &#39;sum&#39;)\n&amp;target=consolidateBy(Servers.web01.sda1.free_space, &#39;max&#39;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.constantLine\">\n<tt class=\"descname\">constantLine</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.constantLine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a float F.</p>\n<p>Draws a horizontal line at value F across the graph.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=constantLine(123.456)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.countSeries\">\n<tt class=\"descname\">countSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.countSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Draws a horizontal line representing the number of nodes found in the seriesList.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=countSeries(carbon.agents.*.*)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.cumulative\">\n<tt class=\"descname\">cumulative</tt><big>(</big><em>seriesList</em>, <em>consolidationFunc='sum'</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.cumulative\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, and an optional function.</p>\n<p>Valid functions are &#8216;sum&#8217;, &#8216;average&#8217;, &#8216;min&#8217;, and &#8216;max&#8217;</p>\n<p>Sets the consolidation function to &#8216;sum&#8217; for the given metric seriesList.</p>\n<p>Alias for <a class=\"reference internal\" href=\"#graphite.render.functions.consolidateBy\" title=\"graphite.render.functions.consolidateBy\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">consolidateBy(series,</span> <span class=\"pre\">'sum')</span></tt></a></p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=cumulative(Sales.widgets.largeBlue)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.currentAbove\">\n<tt class=\"descname\">currentAbove</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.currentAbove\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the  metrics whose value is above N\nat the end of the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=currentAbove(server*.instance*.threads.busy,50)\n</pre></div>\n</div>\n<p>Draws the servers with more than 50 busy threads.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.currentBelow\">\n<tt class=\"descname\">currentBelow</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.currentBelow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the  metrics whose value is below N\nat the end of the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=currentBelow(server*.instance*.threads.busy,3)\n</pre></div>\n</div>\n<p>Draws the servers with less than 3 busy threads.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.dashed\">\n<tt class=\"descname\">dashed</tt><big>(</big><em>*seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.dashed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, followed by a float F.</p>\n<p>Draw the selected metrics with a dotted line with segments of length F\nIf omitted, the default length of the segments is 5.0</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=dashed(server01.instance01.memory.free,2.5)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.derivative\">\n<tt class=\"descname\">derivative</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.derivative\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the opposite of the integral function.  This is useful for taking a\nrunning total metric and calculating the delta between subsequent data points.</p>\n<p>This function does not normalize for periods of time, as a true derivative would.\nInstead see the perSecond() function to calculate a rate of change over time.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=derivative(company.server.application01.ifconfig.TXPackets)\n</pre></div>\n</div>\n<p>Each time you run ifconfig, the RX and TXPackets are higher (assuming there\nis network traffic.) By applying the derivative function, you can get an\nidea of the packets per minute sent or received, even though you&#8217;re only\nrecording the total.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.diffSeries\">\n<tt class=\"descname\">diffSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.diffSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Can take two or more metrics, or a single metric and a constant.\nSubtracts parameters 2 through n from parameter 1.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=diffSeries(service.connections.total,service.connections.failed)\n&amp;target=diffSeries(service.connections.total,5)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.divideSeries\">\n<tt class=\"descname\">divideSeries</tt><big>(</big><em>dividendSeriesList</em>, <em>divisorSeriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.divideSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a dividend metric and a divisor metric and draws the division result.\nA constant may <em>not</em> be passed. To divide by a constant, use the scale()\nfunction (which is essentially a multiplication operation) and use the inverse\nof the dividend. (Division by 8 = multiplication by 1/8 or 0.125)</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=divideSeries(Series.dividends,Series.divisors)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.drawAsInfinite\">\n<tt class=\"descname\">drawAsInfinite</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.drawAsInfinite\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.\nIf the value is zero, draw the line at 0.  If the value is above zero, draw\nthe line at infinity. If the value is null or less than zero, do not draw\nthe line.</p>\n<p>Useful for displaying on/off metrics, such as exit codes. (0 = success,\nanything else = failure.)</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>drawAsInfinite(Testing.script.exitCode)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.events\">\n<tt class=\"descname\">events</tt><big>(</big><em>*tags</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the number of events at this point in time. Usable with\ndrawAsInfinite.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=events(&quot;tag-one&quot;, &quot;tag-two&quot;)\n&amp;target=events(&quot;*&quot;)\n</pre></div>\n</div>\n<p>Returns all events tagged as &#8220;tag-one&#8221; and &#8220;tag-two&#8221; and the second one\nreturns all events.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.exclude\">\n<tt class=\"descname\">exclude</tt><big>(</big><em>seriesList</em>, <em>pattern</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.exclude\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a metric or a wildcard seriesList, followed by a regular expression\nin double quotes.  Excludes metrics that match the regular expression.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=exclude(servers*.instance*.threads.busy,&quot;server02&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.grep\">\n<tt class=\"descname\">grep</tt><big>(</big><em>seriesList</em>, <em>pattern</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.grep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a metric or a wildcard seriesList, followed by a regular expression\nin double quotes.  Excludes metrics that don&#8217;t match the regular expression.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=grep(servers*.instance*.threads.busy,&quot;server02&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.group\">\n<tt class=\"descname\">group</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.group\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes an arbitrary number of seriesLists and adds them to a single seriesList. This is used\nto pass multiple seriesLists to a function which only takes one</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.groupByNode\">\n<tt class=\"descname\">groupByNode</tt><big>(</big><em>seriesList</em>, <em>nodeNum</em>, <em>callback</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.groupByNode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a serieslist and maps a callback to subgroups within as defined by a common node</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=groupByNode(ganglia.by-function.*.*.cpu.load5,2,&quot;sumSeries&quot;)\n\nWould return multiple series which are each the result of applying the &quot;sumSeries&quot; function\nto groups joined on the second node (0 indexed) resulting in a list of targets like\nsumSeries(ganglia.by-function.server1.*.cpu.load5),sumSeries(ganglia.by-function.server2.*.cpu.load5),...\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.highestAverage\">\n<tt class=\"descname\">highestAverage</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.highestAverage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the top N metrics with the highest\naverage value for the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=highestAverage(server*.instance*.threads.busy,5)\n</pre></div>\n</div>\n<p>Draws the top 5 servers with the highest average value.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.highestCurrent\">\n<tt class=\"descname\">highestCurrent</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.highestCurrent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the N metrics with the highest value\nat the end of the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=highestCurrent(server*.instance*.threads.busy,5)\n</pre></div>\n</div>\n<p>Draws the 5 servers with the highest busy threads.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.highestMax\">\n<tt class=\"descname\">highestMax</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.highestMax\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.</p>\n<p>Out of all metrics passed, draws only the N metrics with the highest maximum\nvalue in the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=highestMax(server*.instance*.threads.busy,5)\n</pre></div>\n</div>\n<p>Draws the top 5 servers who have had the most busy threads during the time\nperiod specified.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.hitcount\">\n<tt class=\"descname\">hitcount</tt><big>(</big><em>seriesList</em>, <em>intervalString</em>, <em>alignToInterval=False</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.hitcount\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimate hit counts from a list of time series.</p>\n<p>This function assumes the values in each time series represent\nhits per second.  It calculates hits per some larger interval\nsuch as per day or per hour.  This function is like summarize(),\nexcept that it compensates automatically for different time scales\n(so that a similar graph results from using either fine-grained\nor coarse-grained records) and handles rarely-occurring events\ngracefully.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.holtWintersAberration\">\n<tt class=\"descname\">holtWintersAberration</tt><big>(</big><em>seriesList</em>, <em>delta=3</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.holtWintersAberration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a Holt-Winters forecast using the series as input data and plots the\npositive or negative deviation of the series data from the forecast.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.holtWintersConfidenceArea\">\n<tt class=\"descname\">holtWintersConfidenceArea</tt><big>(</big><em>seriesList</em>, <em>delta=3</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.holtWintersConfidenceArea\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a Holt-Winters forecast using the series as input data and plots the\narea between the upper and lower bands of the predicted forecast deviations.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.holtWintersConfidenceBands\">\n<tt class=\"descname\">holtWintersConfidenceBands</tt><big>(</big><em>seriesList</em>, <em>delta=3</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.holtWintersConfidenceBands\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a Holt-Winters forecast using the series as input data and plots\nupper and lower bands with the predicted forecast deviations.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.holtWintersForecast\">\n<tt class=\"descname\">holtWintersForecast</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.holtWintersForecast\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a Holt-Winters forecast using the series as input data. Data from\none week previous to the series is used to bootstrap the initial forecast.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.identity\">\n<tt class=\"descname\">identity</tt><big>(</big><em>name</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.identity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Identity function:\nReturns datapoints where the value equals the timestamp of the datapoint.\nUseful when you have another series where the value is a timestamp, and\nyou want to compare it to the time of the datapoint, to render an age</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=identity(&quot;The.time.series&quot;)\n</pre></div>\n</div>\n<p>This would create a series named &#8220;The.time.series&#8221; that contains points where\nx(t) == t.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.integral\">\n<tt class=\"descname\">integral</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.integral\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will show the sum over time, sort of like a continuous addition function.\nUseful for finding totals or trends in metrics that are collected per minute.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=integral(company.sales.perMinute)\n</pre></div>\n</div>\n<p>This would start at zero on the left side of the graph, adding the sales each\nminute, and show the total sales for the time period selected at the right\nside, (time now, or the time specified by &#8216;&amp;until=&#8217;).</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.invert\">\n<tt class=\"descname\">invert</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.invert\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, and inverts each datapoint (i.e. 1/x).</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=invert(Server.instance01.threads.busy)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.keepLastValue\">\n<tt class=\"descname\">keepLastValue</tt><big>(</big><em>seriesList</em>, <em>limit=inf</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.keepLastValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, and optionally a limit to the number of &#8216;None&#8217; values to skip over.\nContinues the line with the last received value when gaps (&#8216;None&#8217; values) appear in your data, rather than breaking your line.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=keepLastValue(Server01.connections.handled)\n&amp;target=keepLastValue(Server01.connections.handled, 10)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.legendValue\">\n<tt class=\"descname\">legendValue</tt><big>(</big><em>seriesList</em>, <em>*valueTypes</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.legendValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and a string in quotes.\nAppends a value to the metric name in the legend.  Currently one or several of: <cite>last</cite>, <cite>avg</cite>,\n<cite>total</cite>, <cite>min</cite>, <cite>max</cite>.\nThe last argument can be <cite>si</cite> (default) or <cite>binary</cite>, in that case values will be formatted in the\ncorresponding system.</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>\n</pre></div>\n</div>\n<p>&amp;target=legendValue(Sales.widgets.largeBlue, &#8216;avg&#8217;, &#8216;max&#8217;, &#8216;si&#8217;)</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.limit\">\n<tt class=\"descname\">limit</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.limit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.</p>\n<p>Only draw the first N metrics.  Useful when testing a wildcard in a metric.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=limit(server*.instance*.memory.free,5)\n</pre></div>\n</div>\n<p>Draws only the first 5 instance&#8217;s memory free.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.lineWidth\">\n<tt class=\"descname\">lineWidth</tt><big>(</big><em>seriesList</em>, <em>width</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.lineWidth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, followed by a float F.</p>\n<p>Draw the selected metrics with a line width of F, overriding the default\nvalue of 1, or the &amp;lineWidth=X.X parameter.</p>\n<p>Useful for highlighting a single metric out of many, or having multiple\nline widths in one graph.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=lineWidth(server01.instance01.memory.free,5)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.logarithm\">\n<tt class=\"descname\">logarithm</tt><big>(</big><em>seriesList</em>, <em>base=10</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.logarithm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, a base, and draws the y-axis in logarithmic\nformat.  If base is omitted, the function defaults to base 10.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=log(carbon.agents.hostname.avgUpdateTime,2)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.lowestAverage\">\n<tt class=\"descname\">lowestAverage</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.lowestAverage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the bottom N metrics with the lowest\naverage value for the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=lowestAverage(server*.instance*.threads.busy,5)\n</pre></div>\n</div>\n<p>Draws the bottom 5 servers with the lowest average value.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.lowestCurrent\">\n<tt class=\"descname\">lowestCurrent</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.lowestCurrent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nOut of all metrics passed, draws only the N metrics with the lowest value at\nthe end of the time period specified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=lowestCurrent(server*.instance*.threads.busy,5)\n</pre></div>\n</div>\n<p>Draws the 5 servers with the least busy threads right now.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.maxSeries\">\n<tt class=\"descname\">maxSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.maxSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.\nFor each datapoint from each metric passed in, pick the maximum value and graph it.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=maxSeries(Server*.connections.total)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.maximumAbove\">\n<tt class=\"descname\">maximumAbove</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.maximumAbove\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by a constant n.\nDraws only the metrics with a maximum value above n.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=maximumAbove(system.interface.eth*.packetsSent,1000)\n</pre></div>\n</div>\n<p>This would only display interfaces which sent more than 1000 packets/min.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.maximumBelow\">\n<tt class=\"descname\">maximumBelow</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.maximumBelow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by a constant n.\nDraws only the metrics with a maximum value below n.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=maximumBelow(system.interface.eth*.packetsSent,1000)\n</pre></div>\n</div>\n<p>This would only display interfaces which sent less than 1000 packets/min.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.minSeries\">\n<tt class=\"descname\">minSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.minSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.\nFor each datapoint from each metric passed in, pick the minimum value and graph it.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=minSeries(Server*.connections.total)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.minimumAbove\">\n<tt class=\"descname\">minimumAbove</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.minimumAbove\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by a constant n.\nDraws only the metrics with a minimum value above n.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=minimumAbove(system.interface.eth*.packetsSent,1000)\n</pre></div>\n</div>\n<p>This would only display interfaces which sent more than 1000 packets/min.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.mostDeviant\">\n<tt class=\"descname\">mostDeviant</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.mostDeviant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nDraws the N most deviant metrics.\nTo find the deviants, the standard deviation (sigma) of each series\nis taken and ranked. The top N standard deviations are returned.</p>\n<blockquote>\n<div>Example:</div></blockquote>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=mostDeviant(5, server*.instance*.memory.free)\n</pre></div>\n</div>\n<p>Draws the 5 instances furthest from the average memory free.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.movingAverage\">\n<tt class=\"descname\">movingAverage</tt><big>(</big><em>seriesList</em>, <em>windowSize</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.movingAverage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Graphs the moving average of a metric (or metrics) over a fixed number of\npast points, or a time interval.</p>\n<p>Takes one metric or a wildcard seriesList followed by a number N of datapoints\nor a quoted string with a length of time like &#8216;1hour&#8217; or &#8216;5min&#8217; (See <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">/</span>\n<span class=\"pre\">until</span></tt> in the render_api_ for examples of time formats). Graphs the\naverage of the preceeding datapoints for each point on the graph. All\nprevious datapoints are set to None at the beginning of the graph.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=movingAverage(Server.instance01.threads.busy,10)\n&amp;target=movingAverage(Server.instance*.threads.idle,&#39;5min&#39;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.movingMedian\">\n<tt class=\"descname\">movingMedian</tt><big>(</big><em>seriesList</em>, <em>windowSize</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.movingMedian\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Graphs the moving median of a metric (or metrics) over a fixed number of\npast points, or a time interval.</p>\n<p>Takes one metric or a wildcard seriesList followed by a number N of datapoints\nor a quoted string with a length of time like &#8216;1hour&#8217; or &#8216;5min&#8217; (See <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">/</span>\n<span class=\"pre\">until</span></tt> in the render_api_ for examples of time formats). Graphs the\nmedian of the preceeding datapoints for each point on the graph. All\nprevious datapoints are set to None at the beginning of the graph.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=movingMedian(Server.instance01.threads.busy,10)\n&amp;target=movingMedian(Server.instance*.threads.idle,&#39;5min&#39;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.multiplySeries\">\n<tt class=\"descname\">multiplySeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.multiplySeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes two or more series and multiplies their points. A constant may not be\nused. To multiply by a constant, use the scale() function.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=multiplySeries(Series.dividends,Series.divisors)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.nPercentile\">\n<tt class=\"descname\">nPercentile</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.nPercentile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns n-percent of each series in the seriesList.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.nonNegativeDerivative\">\n<tt class=\"descname\">nonNegativeDerivative</tt><big>(</big><em>seriesList</em>, <em>maxValue=None</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.nonNegativeDerivative\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as the derivative function above, but ignores datapoints that trend\ndown.  Useful for counters that increase for a long time, then wrap or\nreset. (Such as if a network interface is destroyed and recreated by unloading\nand re-loading a kernel module, common with USB / WiFi cards.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=nonNegativederivative(company.server.application01.ifconfig.TXPackets)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.offset\">\n<tt class=\"descname\">offset</tt><big>(</big><em>seriesList</em>, <em>factor</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.offset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by a constant, and adds the constant to\neach datapoint.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=offset(Server.instance01.threads.busy,10)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.perSecond\">\n<tt class=\"descname\">perSecond</tt><big>(</big><em>seriesList</em>, <em>maxValue=None</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.perSecond\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Derivative adjusted for the series time interval\nThis is useful for taking a running total metric and showing how many requests\nper second were handled.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=perSecond(company.server.application01.ifconfig.TXPackets)\n</pre></div>\n</div>\n<p>Each time you run ifconfig, the RX and TXPackets are higher (assuming there\nis network traffic.) By applying the derivative function, you can get an\nidea of the packets per minute sent or received, even though you&#8217;re only\nrecording the total.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.percentileOfSeries\">\n<tt class=\"descname\">percentileOfSeries</tt><big>(</big><em>seriesList</em>, <em>n</em>, <em>interpolate=False</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.percentileOfSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>percentileOfSeries returns a single series which is composed of the n-percentile\nvalues taken across a wildcard series at each point. Unless <cite>interpolate</cite> is\nset to True, percentile values are actual values contained in one of the\nsupplied series.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.randomWalkFunction\">\n<tt class=\"descname\">randomWalkFunction</tt><big>(</big><em>name</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.randomWalkFunction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Short Alias: randomWalk()</p>\n<p>Returns a random walk starting at 0. This is great for testing when there is\nno real data in whisper.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=randomWalk(&quot;The.time.series&quot;)\n</pre></div>\n</div>\n<p>This would create a series named &#8220;The.time.series&#8221; that contains points where\nx(t) == x(t-1)+random()-0.5, and x(0) == 0.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.rangeOfSeries\">\n<tt class=\"descname\">rangeOfSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.rangeOfSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a wildcard seriesList.\nDistills down a set of inputs into the range of the series</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=rangeOfSeries(Server*.connections.total)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.removeAbovePercentile\">\n<tt class=\"descname\">removeAbovePercentile</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.removeAbovePercentile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes data above the nth percentile from the series or list of series provided.\nValues above this percentile are assigned a value of None.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.removeAboveValue\">\n<tt class=\"descname\">removeAboveValue</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.removeAboveValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes data above the given threshold from the series or list of series provided.\nValues above this threshole are assigned a value of None</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.removeBelowPercentile\">\n<tt class=\"descname\">removeBelowPercentile</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.removeBelowPercentile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes data below the nth percentile from the series or list of series provided.\nValues below this percentile are assigned a value of None.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.removeBelowValue\">\n<tt class=\"descname\">removeBelowValue</tt><big>(</big><em>seriesList</em>, <em>n</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.removeBelowValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes data below the given threshold from the series or list of series provided.\nValues below this threshole are assigned a value of None</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.scale\">\n<tt class=\"descname\">scale</tt><big>(</big><em>seriesList</em>, <em>factor</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.scale\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by a constant, and multiplies the datapoint\nby the constant provided at each point.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=scale(Server.instance01.threads.busy,10)\n&amp;target=scale(Server.instance*.threads.busy,10)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.scaleToSeconds\">\n<tt class=\"descname\">scaleToSeconds</tt><big>(</big><em>seriesList</em>, <em>seconds</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.scaleToSeconds\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and returns &#8220;value per seconds&#8221; where\nseconds is a last argument to this functions.</p>\n<p>Useful in conjunction with derivative or integral function if you want\nto normalize its result to a known resolution for arbitrary retentions</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.secondYAxis\">\n<tt class=\"descname\">secondYAxis</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.secondYAxis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Graph the series on the secondary Y axis.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.sinFunction\">\n<tt class=\"descname\">sinFunction</tt><big>(</big><em>name</em>, <em>amplitude=1</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.sinFunction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Short Alias: sin()</p>\n<p>Just returns the sine of the current time. The optional amplitude parameter\nchanges the amplitude of the wave.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=sin(&quot;The.time.series&quot;, 2)\n</pre></div>\n</div>\n<p>This would create a series named &#8220;The.time.series&#8221; that contains sin(x)*2.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.smartSummarize\">\n<tt class=\"descname\">smartSummarize</tt><big>(</big><em>seriesList</em>, <em>intervalString</em>, <em>func='sum'</em>, <em>alignToFrom=False</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.smartSummarize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Smarter experimental version of summarize.</p>\n<p>The alignToFrom parameter has been deprecated, it no longer has any effect.\nAlignment happens automatically for days, hours, and minutes.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.sortByMaxima\">\n<tt class=\"descname\">sortByMaxima</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.sortByMaxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.</p>\n<p>Sorts the list of metrics by the maximum value across the time period\nspecified.  Useful with the &amp;areaMode=all parameter, to keep the\nlowest value lines visible.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=sortByMaxima(server*.instance*.memory.free)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.sortByMinima\">\n<tt class=\"descname\">sortByMinima</tt><big>(</big><em>seriesList</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.sortByMinima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.</p>\n<p>Sorts the list of metrics by the lowest value across the time period\nspecified.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=sortByMinima(server*.instance*.memory.free)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.stacked\">\n<tt class=\"descname\">stacked</tt><big>(</big><em>seriesLists</em>, <em>stackName='__DEFAULT__'</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.stacked\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList and change them so they are\nstacked. This is a way of stacking just a couple of metrics without having\nto use the stacked area mode (that stacks everything). By means of this a mixed\nstacked and non stacked graph can be made</p>\n<p>It can also take an optional argument with a name of the stack, in case there is\nmore than one, e.g. for input and output metrics.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=stacked(company.server.application01.ifconfig.TXPackets, &#39;tx&#39;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.stddevSeries\">\n<tt class=\"descname\">stddevSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.stddevSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList.\nDraws the standard deviation of all metrics passed at each time.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=stddevSeries(company.server.*.threads.busy)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.stdev\">\n<tt class=\"descname\">stdev</tt><big>(</big><em>seriesList</em>, <em>points</em>, <em>windowTolerance=0.1</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.stdev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by an integer N.\nDraw the Standard Deviation of all metrics passed for the past N datapoints.\nIf the ratio of null points in the window is greater than windowTolerance,\nskip the calculation. The default for windowTolerance is 0.1 (up to 10% of points\nin the window can be missing). Note that if this is set to 0.0, it will cause large\ngaps in the output anywhere a single point is missing.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=stdev(server*.instance*.threads.busy,30)\n&amp;target=stdev(server*.instance*.cpu.system,30,0.0)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.substr\">\n<tt class=\"descname\">substr</tt><big>(</big><em>seriesList</em>, <em>start=0</em>, <em>stop=0</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.substr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList followed by 1 or 2 integers.  Assume that the\nmetric name is a list or array, with each element separated by dots.  Prints\nn - length elements of the array (if only one integer n is passed) or n - m\nelements of the array (if two integers n and m are passed).  The list starts\nwith element 0 and ends with element (length - 1).</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=substr(carbon.agents.hostname.avgUpdateTime,2,4)\n</pre></div>\n</div>\n<p>The label would be printed as &#8220;hostname.avgUpdateTime&#8221;.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.sumSeries\">\n<tt class=\"descname\">sumSeries</tt><big>(</big><em>*seriesLists</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.sumSeries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Short form: sum()</p>\n<p>This will add metrics together and return the sum at each datapoint. (See\nintegral for a sum over time)</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=sum(company.server.application*.requestsHandled)\n</pre></div>\n</div>\n<p>This would show the sum of all requests handled per minute (provided\nrequestsHandled are collected once a minute).   If metrics with different\nretention rates are combined, the coarsest metric is graphed, and the sum\nof the other metrics is averaged for the metrics with finer retention rates.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.sumSeriesWithWildcards\">\n<tt class=\"descname\">sumSeriesWithWildcards</tt><big>(</big><em>seriesList</em>, <em>*position</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.sumSeriesWithWildcards\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Call sumSeries after inserting wildcards at the given position(s).</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=sumSeriesWithWildcards(host.cpu-[0-7].cpu-{user,system}.value, 1)\n</pre></div>\n</div>\n<p>This would be the equivalent of\n<tt class=\"docutils literal\"><span class=\"pre\">target=sumSeries(host.*.cpu-user.value)&amp;target=sumSeries(host.*.cpu-system.value)</span></tt></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.summarize\">\n<tt class=\"descname\">summarize</tt><big>(</big><em>seriesList</em>, <em>intervalString</em>, <em>func='sum'</em>, <em>alignToFrom=False</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.summarize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Summarize the data into interval buckets of a certain size.</p>\n<p>By default, the contents of each interval bucket are summed together. This is\nuseful for counters where each increment represents a discrete event and\nretrieving a &#8220;per X&#8221; value requires summing all the events in that interval.</p>\n<p>Specifying &#8216;avg&#8217; instead will return the mean for each bucket, which can be more\nuseful when the value is a gauge that represents a certain value in time.</p>\n<p>&#8216;max&#8217;, &#8216;min&#8217; or &#8216;last&#8217; can also be specified.</p>\n<p>By default, buckets are caculated by rounding to the nearest interval. This\nworks well for intervals smaller than a day. For example, 22:32 will end up\nin the bucket 22:00-23:00 when the interval=1hour.</p>\n<p>Passing alignToFrom=true will instead create buckets starting at the from\ntime. In this case, the bucket for 22:32 depends on the from time. If\nfrom=6:30 then the 1hour bucket for 22:32 is 22:30-23:30.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=summarize(counter.errors, &quot;1hour&quot;) # total errors per hour\n&amp;target=summarize(nonNegativeDerivative(gauge.num_users), &quot;1week&quot;) # new users per week\n&amp;target=summarize(queue.size, &quot;1hour&quot;, &quot;avg&quot;) # average queue size per hour\n&amp;target=summarize(queue.size, &quot;1hour&quot;, &quot;max&quot;) # maximum queue size during each hour\n&amp;target=summarize(metric, &quot;13week&quot;, &quot;avg&quot;, true)&amp;from=midnight+20100101 # 2010 Q1-4\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.threshold\">\n<tt class=\"descname\">threshold</tt><big>(</big><em>value</em>, <em>label=None</em>, <em>color=None</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.threshold\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a float F, followed by a label (in double quotes) and a color.\n(See <tt class=\"docutils literal\"><span class=\"pre\">bgcolor</span></tt> in the render_api_ for valid color names &amp; formats.)</p>\n<p>Draws a horizontal line at value F across the graph.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=threshold(123.456, &quot;omgwtfbbq&quot;, red)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.timeFunction\">\n<tt class=\"descname\">timeFunction</tt><big>(</big><em>name</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.timeFunction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Short Alias: time()</p>\n<p>Just returns the timestamp for each X value. T</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=time(&quot;The.time.series&quot;)\n</pre></div>\n</div>\n<p>This would create a series named &#8220;The.time.series&#8221; that contains in Y the same\nvalue (in seconds) as X.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.timeShift\">\n<tt class=\"descname\">timeShift</tt><big>(</big><em>seriesList</em>, <em>timeShift</em>, <em>resetEnd=True</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.timeShift\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, followed by a quoted string with the\nlength of time (See <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">/</span> <span class=\"pre\">until</span></tt> in the render_api_ for examples of time formats).</p>\n<p>Draws the selected metrics shifted in time. If no sign is given, a minus sign ( - ) is\nimplied which will shift the metric back in time. If a plus sign ( + ) is given, the\nmetric will be shifted forward in time.</p>\n<p>Will reset the end date range automatically to the end of the base stat unless\nresetEnd is False. Example case is when you timeshift to last week and have the graph\ndate range set to include a time in the future, will limit this timeshift to pretend\nending at the current time. If resetEnd is False, will instead draw full range including\nfuture time.</p>\n<p>Useful for comparing a metric against itself at a past periods or correcting data\nstored at an offset.</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=timeShift(Sales.widgets.largeBlue,&quot;7d&quot;)\n&amp;target=timeShift(Sales.widgets.largeBlue,&quot;-7d&quot;)\n&amp;target=timeShift(Sales.widgets.largeBlue,&quot;+1h&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.timeStack\">\n<tt class=\"descname\">timeStack</tt><big>(</big><em>seriesList</em>, <em>timeShiftUnit</em>, <em>timeShiftStart</em>, <em>timeShiftEnd</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.timeStack\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes one metric or a wildcard seriesList, followed by a quoted string with the\nlength of time (See <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">/</span> <span class=\"pre\">until</span></tt> in the render_api_ for examples of time formats).\nAlso takes a start multiplier and end multiplier for the length of time</p>\n<p>create a seriesList which is composed the orginal metric series stacked with time shifts\nstarting time shifts from the start multiplier through the end multiplier</p>\n<p>Useful for looking at history, or feeding into seriesAverage or seriesStdDev</p>\n<p>Example:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=timeStack(Sales.widgets.largeBlue,&quot;1d&quot;,0,7)    # create a series for today and each of the previous 7 days\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.transformNull\">\n<tt class=\"descname\">transformNull</tt><big>(</big><em>seriesList</em>, <em>default=0</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.transformNull\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a metric or wild card seriesList and an optional value\nto transform Nulls to. Default is 0. This method compliments\ndrawNullAsZero flag in graphical mode but also works in text only\nmode.\nExample:</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=transformNull(webapp.pages.*.views,-1)\n</pre></div>\n</div>\n<p>This would take any page that didn&#8217;t have values and supply negative 1 as a default.\nAny other numeric value may be used as well.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"graphite.render.functions.useSeriesAbove\">\n<tt class=\"descname\">useSeriesAbove</tt><big>(</big><em>seriesList</em>, <em>value</em>, <em>search</em>, <em>replace</em><big>)</big><a class=\"headerlink\" href=\"#graphite.render.functions.useSeriesAbove\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compares the maximum of each series against the given <cite>value</cite>. If the series\nmaximum is greater than <cite>value</cite>, the regular expression search and replace is\napplied against the series name to plot a related metric</p>\n<p>e.g. given useSeriesAbove(ganglia.metric1.reqs,10,&#8217;reqs&#8217;,&#8217;time&#8217;),\nthe response time metric will be plotted only when the maximum value of the\ncorresponding request/s metric is &gt; 10</p>\n<div class=\"highlight-none\"><div class=\"highlight\"><pre>&amp;target=useSeriesAbove(ganglia.metric1.reqs,10,&quot;reqs&quot;,&quot;time&quot;)\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "display_toc": true, "title": "Functions", "sourcename": "functions.txt", "customsidebar": null, "current_page_name": "functions", "next": {"link": "../dashboard/", "title": "The Dashboard User Interface"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["dashboard", "The Dashboard User Interface", "N", "next"], ["render_api", "The Render URL API", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Functions</a><ul>\n<li><a class=\"reference internal\" href=\"#usage\">Usage</a></li>\n<li><a class=\"reference internal\" href=\"#module-graphite.render.functions\">List of functions</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../render_api/", "title": "The Render URL API"}, "metatags": ""}